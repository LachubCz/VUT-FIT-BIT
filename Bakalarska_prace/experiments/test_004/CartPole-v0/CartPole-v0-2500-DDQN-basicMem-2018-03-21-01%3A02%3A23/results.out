[33mWARN: gym.spaces.Box autodetected dtype as <class 'numpy.float32'>. Please provide explicit dtype.[0m
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         (None, 4)                 0         
_________________________________________________________________
dense_1 (Dense)              (None, 32)                160       
_________________________________________________________________
dense_2 (Dense)              (None, 16)                528       
_________________________________________________________________
dense_3 (Dense)              (None, 2)                 34        
=================================================================
Total params: 722
Trainable params: 722
Non-trainable params: 0
_________________________________________________________________
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_2 (InputLayer)         (None, 4)                 0         
_________________________________________________________________
dense_4 (Dense)              (None, 32)                160       
_________________________________________________________________
dense_5 (Dense)              (None, 16)                528       
_________________________________________________________________
dense_6 (Dense)              (None, 2)                 34        
=================================================================
Total params: 722
Trainable params: 722
Non-trainable params: 0
_________________________________________________________________
Random agent added 10000 new memories. Current memory_size: 10000
Episode: 0/2500, epsilon: 1.0, memory_size: 10000, score: 9.0
Episode: 1/2500, epsilon: 1.0, memory_size: 10000, score: 9.0
Episode: 2/2500, epsilon: 1.0, memory_size: 10000, score: 9.0
Episode: 3/2500, epsilon: 1.0, memory_size: 10000, score: 10.0
Episode: 4/2500, epsilon: 1.0, memory_size: 10000, score: 9.0
Episode: 5/2500, epsilon: 1.0, memory_size: 10000, score: 13.0
Episode: 6/2500, epsilon: 1.0, memory_size: 10000, score: 8.0
Episode: 7/2500, epsilon: 1.0, memory_size: 10000, score: 10.0
Episode: 8/2500, epsilon: 0.99, memory_size: 10000, score: 14.0
Episode: 9/2500, epsilon: 0.99, memory_size: 10000, score: 13.0
Episode: 10/2500, epsilon: 0.99, memory_size: 10000, score: 32.0
Episode: 11/2500, epsilon: 0.99, memory_size: 10000, score: 30.0
Episode: 12/2500, epsilon: 0.99, memory_size: 10000, score: 10.0
Episode: 13/2500, epsilon: 0.99, memory_size: 10000, score: 9.0
Episode: 14/2500, epsilon: 0.99, memory_size: 10000, score: 9.0
Episode: 15/2500, epsilon: 0.99, memory_size: 10000, score: 9.0
Episode: 16/2500, epsilon: 0.99, memory_size: 10000, score: 30.0
Episode: 17/2500, epsilon: 0.99, memory_size: 10000, score: 46.0
Episode: 18/2500, epsilon: 0.99, memory_size: 10000, score: 106.0
Episode: 19/2500, epsilon: 0.99, memory_size: 10000, score: 33.0
Episode: 20/2500, epsilon: 0.99, memory_size: 10000, score: 35.0
Episode: 21/2500, epsilon: 0.99, memory_size: 10000, score: 142.0
Episode: 22/2500, epsilon: 0.99, memory_size: 10000, score: 100.0
Episode: 23/2500, epsilon: 0.99, memory_size: 10000, score: 32.0
Episode: 24/2500, epsilon: 0.99, memory_size: 10000, score: 102.0
Episode: 25/2500, epsilon: 0.99, memory_size: 10000, score: 84.0
Episode: 26/2500, epsilon: 0.99, memory_size: 10000, score: 109.0
Episode: 27/2500, epsilon: 0.99, memory_size: 10000, score: 46.0
Episode: 28/2500, epsilon: 0.99, memory_size: 10000, score: 100.0
Episode: 29/2500, epsilon: 0.99, memory_size: 10000, score: 96.0
Episode: 30/2500, epsilon: 0.98, memory_size: 10000, score: 112.0
Episode: 31/2500, epsilon: 0.98, memory_size: 10000, score: 90.0
Episode: 32/2500, epsilon: 0.98, memory_size: 10000, score: 109.0
Episode: 33/2500, epsilon: 0.98, memory_size: 10000, score: 100.0
Episode: 34/2500, epsilon: 0.98, memory_size: 10000, score: 99.0
Episode: 35/2500, epsilon: 0.98, memory_size: 10000, score: 135.0
Episode: 36/2500, epsilon: 0.98, memory_size: 10000, score: 106.0
Episode: 37/2500, epsilon: 0.98, memory_size: 10000, score: 109.0
Episode: 38/2500, epsilon: 0.98, memory_size: 10000, score: 116.0
Episode: 39/2500, epsilon: 0.98, memory_size: 10000, score: 132.0
Episode: 40/2500, epsilon: 0.98, memory_size: 10000, score: 154.0
Episode: 41/2500, epsilon: 0.98, memory_size: 10000, score: 114.0
Episode: 42/2500, epsilon: 0.98, memory_size: 10000, score: 106.0
Episode: 43/2500, epsilon: 0.98, memory_size: 10000, score: 200.0
Episode: 44/2500, epsilon: 0.98, memory_size: 10000, score: 83.0
Episode: 45/2500, epsilon: 0.98, memory_size: 10000, score: 200.0
Task solved after 45 episodes with score 200.0.
